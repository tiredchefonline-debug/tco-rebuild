(function(){ function initCarousel(root){ if(!root) return; const track = root.querySelector('.track'); const slides = Array.from(root.querySelectorAll('.slide')); const dots = Array.from(root.querySelectorAll('[data-dot]')); let i = 0, timer = null; function go(n){ i = (n + slides.length) % slides.length; track.scrollTo({left: slides[i].offsetLeft - slides[0].offsetLeft, behavior:'smooth'}); dots.forEach((d,idx)=> d.setAttribute('aria-current', idx===i ? 'true' : 'false')); root.setAttribute('data-index', i); } dots.forEach((d,idx)=> d.addEventListener('click', ()=>go(idx))); root.querySelector('[data-prev]').addEventListener('click', ()=>go(i-1)); root.querySelector('[data-next]').addEventListener('click', ()=>go(i+1)); root.tabIndex = 0; root.addEventListener('keydown', e=>{ if(e.key==='ArrowRight') go(i+1); if(e.key==='ArrowLeft') go(i-1); }); track.addEventListener('scroll', ()=> { const x = track.scrollLeft + track.clientWidth/2; const idx = slides.findIndex(s => (s.offsetLeft - slides[0].offsetLeft) + s.clientWidth/2 > x) - 1; if(idx>=0 && idx<slides.length && idx !== i){ i = idx; dots.forEach((d,di)=> d.setAttribute('aria-current', di===i ? 'true' : 'false')); } }, {passive:true}); const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches; function start(){ if(prefersReduced) return; stop(); timer = setInterval(()=>go(i+1), 6000); } function stop(){ if(timer) { clearInterval(timer); timer = null; } } root.addEventListener('mouseenter', stop); root.addEventListener('mouseleave', start); root.addEventListener('focusin', stop); root.addEventListener('focusout', start); go(0); start(); } document.querySelectorAll('.carousel-2025[role="region"]').forEach(initCarousel); })();